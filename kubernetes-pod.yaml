apiVersion: v1
kind: Pod
metadata:
  name: kafka-client-shell
spec:
  initContainers:
  - name: init-ca
    image: registry/strimzi/kafka-cli-oauth:0.27.1-kafka-3.0.0
    command:
    securityContext:
      runAsUser: 0
    command:
    - sh
    - -c
    - |
      cp -L /tmp/ssl/ca.crt /etc/pki/ca-trust/source/anchors/
      ls -la /etc/pki/ca-trust/source/anchors/
      update-ca-trust
      ls -la /etc/pki/ca-trust/extracted
      grep "cluster" /etc/pki/ca-trust/extracted/pem/*
      cp -rf /etc/pki/ca-trust/extracted/* /tmp/ca-trust/
    volumeMounts:
    - name: shared-ca-trust
      mountPath: "/tmp/ca-trust"
    - name: kafka-ca
      mountPath: "/tmp/ssl"
      readOnly: true
  containers:
  - name: kafka-client-shell
    image: registry/strimzi/kafka-cli-oauth:0.27.1-kafka-3.0.0
    command: ["/bin/bash"]
    args: [ "-c", 'for((i=0;;i+=1)); do echo "Up time: $i min" && sleep 60; done' ]
    env:
    - name: OAUTH_TOKEN_ENDPOINT_URI
      value: https://xxx/auth/realms/witcom/protocol/openid-connect/token
    - name: TOKEN_ENDPOINT
      value: https://xxx/auth/realms/witcom/protocol/openid-connect/token
    - name: CLIENT_ID
      value: streaming-witcom-01-cli
    volumeMounts:
    - name: shared-ca-trust
      mountPath: "/etc/pki/ca-trust/extracted"
    - name: kafka-ca
      mountPath: "/tmp/ssl"
      readOnly: true
  volumes:
  - name: shared-ca-trust
    emptyDir: {}
  - name: kafka-ca
    secret:
      secretName: streaming-witcom-01-cluster-ca-cert
